<div class="row g-3 mb-3">
  <div class="card h-100">
    <div class="card-header">
      <div class="row flex-between-end">
        <div class="col-auto align-self-center">
          <h5 class="mb-0" data-anchor="data-anchor">Stacked area chart</h5>
        </div>
      </div>
    </div>
    <div class="card-body bg-light">
      <div class="tab-content">
        <div class="tab-pane preview-tab-pane active" role="tabpanel"
          aria-labelledby="tab-dom-ce4113cd-4f6c-40a1-91df-b85a1a51dd61"
          id="dom-ce4113cd-4f6c-40a1-91df-b85a1a51dd61">
          <div class="echart-line-marker-chart" style="min-height: 300px;" data-echart-responsive="true"></div>
        </div>
        <div class="tab-pane code-tab-pane" role="tabpanel"
          aria-labelledby="tab-dom-9f60772b-1ef6-455d-932a-6381c7cf853e"
          id="dom-9f60772b-1ef6-455d-932a-6381c7cf853e">
          <pre class="scrollbar rounded-1" style="max-height:420px"><code class="language-html"></code></pre>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
var trajectory_details = <%= records.to_json.html_safe %>;
var seasons = <%= seasons.to_json.html_safe %>;
var grades  = <%= grades.to_json.html_safe %>;
var headings = []
var student_grades = {}
var student_data = []
trajectory_details.map((td)=>{
  student_grades[`${td.season}-${td.grade}`] = td.wpm - td.error_count
})

grades.map((grade)=>{
  seasons.map((season)=>{
    student_data.push((student_grades[`${season}-${grade}`])? student_grades[`${season}-${grade}`] : undefined)
    headings.push(`${season.toUpperCase()[0]}-${parseInt(grade) + 1}`)
  })
})

var series = [{
  name: 'Average Reader',
  data: [0, 9, 18, 23, 35, 43, 40, 62, 63, 60, 71, 83, 64, 84, 102, 89, 91, 91],
  class: 'warning'
},{
  name: 'Student',
  data: student_data,
  class: 'primary'
},{
  name: 'Successful Reader',
  data: [0, 29, 60, 50, 84, 100, 83, 97, 112, 94, 120, 133, 121, 133, 146, 132, 145, 146],
  class: 'success'
}]
window.graphInit("echart-line-marker-chart", {
  days: headings,
  data: [18,28],
  series: series.map((item)=>{
    return {
      name: item.name,
      type: 'line',
      data: item.data,
      symbolSize: 10,
      itemStyle: {
        color: window.getGrays().white,
        borderColor: window.getColor(item.class),
        borderWidth: 2
      },
      lineStyle: {
        color: window.getColor(item.class)
      },
      symbol: 'circle',
      markPoint: {
        itemStyle: {
          color: window.getColor(item.class)
        },
        label: {
          color: '#fff'
        },
        data: [{
          name: 'Weekly lowest',
          value: -2,
          xAxis: 1,
          yAxis: -1.5
        }]
      },
      markLine: {
        lineStyle: {
          color: window.getColor(item.class)
        },
        label: {
          color: window.getGrays()['600']
        },
        data: [{
          type: 'average',
          name: 'average'
        },[{
          symbol: 'none',
          x: '90%',
          yAxis: 'max'
        }, {
          symbol: 'circle',
          label: {
            position: 'start',
            formatter: 'Max'
          },
          type: 'max',
          name: 'Highest point'
        }]]
      }
    }
  })
})
</script>